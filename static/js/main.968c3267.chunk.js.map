{"version":3,"sources":["components/Input.js","components/Button.js","components/StatusFilter.js","components/SearchPanel.js","components/AddPanel.js","components/AppHeader.js","components/TodoListItem.js","components/TodoList.js","components/App.js","index.js"],"names":["Input","inputText","searchText","changeInput","className","type","placeholder","onChange","evt","target","value","Button","submit","icon","text","isActive","handleClick","onClick","aria-hidden","StatusFilter","buttons","this","props","statusFilter","onFilterChange","map","key","role","Component","SearchPanel","AddPanel","handleSubmit","preventDefault","onAdd","onSubmit","AppHeader","toDo","done","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classes","classnames","list__label","list__label_done","list__label_important","Fragment","TodoList","todos","elements","id","item","App","maxId","state","todoData","createTodoItem","newTodo","searchTodo","filterTodo","handleDeleteItem","setState","filter","elem","handleChangeInput","handleAddItem","todo","handleToggleImportant","toggleProperty","handleToggleDone","handleSearchInput","handleFilterChange","status","arr","propName","oldTodo","items","search","length","toLowerCase","indexOf","doneCount","todoCount","visibleTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.968c3267.chunk.js","sourcesContent":["import React from 'react';\nimport './../blocks/input/input.css';\n\nconst Input = ({ inputText = '', searchText, changeInput }) => {\n  const handleInputChange = (evt) => {\n    changeInput(evt.target.value);\n  };\n\n  return (\n    <input\n      className=\"form-control input\"\n      type=\"text\"\n      placeholder={searchText}\n      onChange={handleInputChange}\n      value={inputText}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './../blocks/button/button.css';\n\nconst Button = ({\n  submit = false,\n  type = 'outline-success',\n  icon = '',\n  text = null,\n  isActive = false,\n  handleClick,\n}) => {\n  return (\n    <button\n      type={submit ? 'submit' : 'button'}\n      className={`btn btn-${type} button ${isActive && 'active'}`}\n      onClick={handleClick}\n    >\n      {text ? text : <i className={`fa fa-${icon}`} aria-hidden=\"true\" />}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nexport default class StatusFilter extends Component {\n  buttons = [\n    { text: 'All', type: 'outline-dark' },\n    { text: 'Active', type: 'outline-dark' },\n    { text: 'Done', type: 'outline-dark' },\n  ];\n\n  render() {\n    const { statusFilter, onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({ text, type }) => {\n      const isActive = statusFilter === text;\n\n      return (\n        <Button\n          key={text}\n          text={text}\n          type={type}\n          isActive={isActive}\n          handleClick={() => onFilterChange(text)}\n        />\n      );\n    });\n\n    return (\n      <div className=\"btn-group\" role=\"group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Input from './Input';\nimport StatusFilter from './StatusFilter';\nimport './../blocks/panel/panel.css';\n\nexport default class SearchPanel extends Component {\n  render() {\n    const { inputText, changeInput, statusFilter, onFilterChange } = this.props;\n\n    return (\n      <div className=\"panel\">\n        <Input\n          searchText=\"Type to search\"\n          inputText={inputText}\n          changeInput={changeInput}\n        />\n        <StatusFilter\n          statusFilter={statusFilter}\n          onFilterChange={onFilterChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Input from './Input';\nimport Button from './Button';\nimport './../blocks/panel/panel.css';\n\nexport default class AddPanel extends Component {\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n  };\n\n  render() {\n    const { inputText, changeInput, onAdd } = this.props;\n\n    return (\n      <form className=\"panel\" onSubmit={this.handleSubmit}>\n        <Input\n          inputText={inputText}\n          searchText=\"What need to be done\"\n          changeInput={changeInput}\n        />\n        <Button submit type=\"warning\" text=\"Add todo\" handleClick={onAdd} />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './../blocks/app-header/app-header.css';\n\nconst AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"app-header\">\n      <h1 className=\"app-header__title\">Todo List</h1>\n      <span className=\"app-header__info\">\n        {toDo} more to do, {done} done\n      </span>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport Button from './Button';\n\nexport default class TodoListItem extends Component {\n  render() {\n    const {\n      label,\n      onDeleted,\n      onToggleImportant,\n      onToggleDone,\n      important,\n      done,\n    } = this.props;\n\n    const classes = classnames({\n      list__label: true,\n      list__label_done: done,\n      list__label_important: important,\n    });\n\n    return (\n      <React.Fragment>\n        <span className={classes} onClick={onToggleDone}>\n          {label}\n        </span>\n        <Button type=\"outline-danger\" icon=\"trash\" handleClick={onDeleted} />\n        <Button\n          type=\"outline-success\"\n          icon=\"exclamation\"\n          handleClick={onToggleImportant}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport TodoListItem from './TodoListItem';\nimport '../blocks/list/list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n  const elements = todos.map(({ id, ...item }) => {\n    return (\n      <li key={id} className=\"list-group-item list__item\">\n        <TodoListItem\n          {...item}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group list\">{elements}</ul>;\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport SearchPanel from './SearchPanel';\nimport AddPanel from './AddPanel';\nimport AppHeader from './AppHeader';\nimport TodoList from './TodoList';\nimport './../blocks/page/page.css';\nimport './../blocks/app/app.css';\n\nexport default class App extends Component {\n  maxId = 1000;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Have a lunch'),\n    ],\n    newTodo: '',\n    searchTodo: '',\n    filterTodo: 'All',\n  };\n\n  createTodoItem(label) {\n    return {\n      label: label,\n      important: false,\n      done: false,\n      id: this.maxId++,\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const [oldTodo] = arr.filter((todo) => todo.id === id);\n    const newTodo = { ...oldTodo, [propName]: !oldTodo[propName] };\n    const newTodoList = arr.map((todo) => (todo.id === id ? newTodo : todo));\n\n    return newTodoList;\n  }\n\n  handleDeleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const newTodoData = todoData.filter((elem) => elem.id !== id);\n\n      return {\n        todoData: newTodoData,\n      };\n    });\n  };\n\n  handleChangeInput = (value) => {\n    this.setState({\n      newTodo: value,\n    });\n  };\n\n  handleAddItem = () => {\n    const { newTodo } = this.state;\n    if (newTodo === '') {\n      return;\n    }\n    const todo = this.createTodoItem(newTodo);\n    this.setState(({ todoData }) => {\n      return {\n        todoData: [...todoData, todo],\n        newTodo: '',\n      };\n    });\n  };\n\n  handleToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important'),\n      };\n    });\n  };\n\n  handleToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done'),\n      };\n    });\n  };\n\n  handleSearchInput = (value) => {\n    this.setState({\n      searchTodo: value,\n    });\n  };\n\n  searchTodo(items, search) {\n    if (search.length === 0) {\n      return items;\n    }\n\n    return items.filter(\n      (item) => item.label.toLowerCase().indexOf(search.toLowerCase()) > -1\n    );\n  }\n\n  filterTodo(items, filter) {\n    switch (filter) {\n      case 'All':\n        return items;\n      case 'Active':\n        return items.filter((item) => !item.done);\n      case 'Done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n\n  handleFilterChange = (status) => {\n    this.setState({\n      filterTodo: status,\n    });\n  };\n\n  render() {\n    const { todoData, newTodo, searchTodo, filterTodo } = this.state;\n    const doneCount = todoData.filter((todo) => todo.done === true).length;\n    const todoCount = todoData.length - doneCount;\n    const visibleTodo = this.filterTodo(\n      this.searchTodo(todoData, searchTodo),\n      filterTodo\n    );\n\n    return (\n      <div className=\"page\">\n        <div className=\"app\">\n          <AppHeader toDo={todoCount} done={doneCount} />\n          <SearchPanel\n            inputText={searchTodo}\n            changeInput={this.handleSearchInput}\n            statusFilter={filterTodo}\n            onFilterChange={this.handleFilterChange}\n          />\n          <TodoList\n            todos={visibleTodo}\n            onDeleted={this.handleDeleteItem}\n            onToggleImportant={this.handleToggleImportant}\n            onToggleDone={this.handleToggleDone}\n          />\n          <AddPanel\n            inputText={newTodo}\n            changeInput={this.handleChangeInput}\n            onAdd={this.handleAddItem}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}